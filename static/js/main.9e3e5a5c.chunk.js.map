{"version":3,"sources":["components/Statistics/Statistics.module.css","components/FeedbackOptions/FeedbackOptison.module.css","components/SectionTitle/SectionTitle.module.css","components/Container/Container.module.css","components/Statistics/Statistics.js","components/FeedbackOptions/FeedbackOptions.js","components/SectionTitle/SectionTitle.js","components/NotificationMessage/NotificationMessage.js","components/Container/Container.js","App.js","index.js"],"names":["module","exports","Statistics","good","neutral","bad","total","positiveFeedbackPercentege","className","s","statisticsFeedback","statisticsFeedbackItem","FeedbackOptions","options","onLeaveFeedback","Object","keys","map","el","index","feedbackBtn","onClick","SectionTitle","title","children","titleForSections","NotificationMessage","message","Container","container","App","useState","setGoodFeedback","setNeutralFeedback","setBadFeedback","countTotalFeedback","totalFeedback","positiveFeedback","Math","round","type","prevState","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"2IACAA,EAAOC,QAAU,CAAC,mBAAqB,uCAAuC,uBAAyB,6C,mBCAvGD,EAAOC,QAAU,CAAC,YAAc,uC,gBCAhCD,EAAOC,QAAU,CAAC,iBAAmB,yC,gBCArCD,EAAOC,QAAU,CAAC,UAAY,+B,qICkBfC,MAhBf,YAAgF,IAA1DC,EAAyD,EAAzDA,KAAMC,EAAmD,EAAnDA,QAASC,EAA0C,EAA1CA,IAAKC,EAAqC,EAArCA,MAAOC,EAA8B,EAA9BA,2BAC/C,OACE,qBAAIC,UAAWC,IAAEC,mBAAjB,UACE,qBAAIF,UAAWC,IAAEE,uBAAjB,mBAAgDR,KAChD,qBAAIK,UAAWC,IAAEE,uBAAjB,uBAAoDP,KACpD,qBAAII,UAAWC,IAAEE,uBAAjB,kBAA+CN,KAC/C,qBAAIG,UAAWC,IAAEE,uBAAjB,oBAAiDL,KACjD,qBAAIE,UAAWC,IAAEE,uBAAjB,+BACqB,IACR,IAAVL,EACIC,EAA6B,EAC9BA,S,gBCIGK,MAff,YAAwD,IAA7BC,EAA4B,EAA5BA,QAASC,EAAmB,EAAnBA,gBAClC,OACE,mCACGC,OAAOC,KAAKH,GAASI,KAAI,SAACC,EAAIC,GAAL,OACxB,wBACEX,UAAWC,IAAEW,YAEbC,QAAS,kBAAMP,EAAgBI,IAHjC,SAKGA,GAHIC,S,gBCEAG,MARf,YAA4C,IAApBC,EAAmB,EAAnBA,MAAOC,EAAY,EAAZA,SAC7B,OACE,qCACE,oBAAIhB,UAAWC,IAAEgB,iBAAjB,SAAoCF,IACnCC,MCEQE,MAPf,YAA2C,IAAZC,EAAW,EAAXA,QAC7B,OACE,mCACE,4BAAIA,O,gBCCKC,MAJf,YAAkC,IAAbJ,EAAY,EAAZA,SACnB,OAAO,qBAAKhB,UAAWC,IAAEoB,UAAlB,SAA8BL,KC2DxBM,MAtDf,WAAgB,IAAD,EACmBC,mBAAS,GAD5B,mBACN5B,EADM,KACA6B,EADA,OAEyBD,mBAAS,GAFlC,mBAEN3B,EAFM,KAEG6B,EAFH,OAGiBF,mBAAS,GAH1B,mBAGN1B,EAHM,KAGD6B,EAHC,KAoBPC,EAAqB,WACzB,OAAOhC,EAAOC,EAAUC,GAGpB+B,EAAgBD,IAKhBE,EAFGC,KAAKC,MAAOpC,EAAOiC,EAAiB,KAI7C,OACE,eAAC,EAAD,WACE,cAAC,EAAD,CAAcb,MAAM,0BACpB,cAAC,EAAD,CACEV,QAAS,CAAEV,OAAMC,UAASC,OAC1BS,gBA/Bc,SAAA0B,GAClB,OAAQA,GACN,IAAK,OACHR,GAAgB,SAAAS,GAAS,OAAIA,EAAY,KACzC,MACF,IAAK,UACHR,GAAmB,SAAAQ,GAAS,OAAIA,EAAY,KAC5C,MACF,IAAK,MACHP,GAAe,SAAAO,GAAS,OAAIA,EAAY,KACxC,MACF,QACE,WAqBF,cAAC,EAAD,CAAclB,MAAM,eACI,IAAvBY,EACC,cAAC,EAAD,CAAqBR,QAAQ,sBAE7B,cAAC,EAAD,CACErB,MAAO8B,EACPjC,KAAMA,EACNC,QAASA,EACTC,IAAKA,EACLE,2BAA4B8B,QCjDtCK,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,W","file":"static/js/main.9e3e5a5c.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"statisticsFeedback\":\"Statistics_statisticsFeedback__1efnS\",\"statisticsFeedbackItem\":\"Statistics_statisticsFeedbackItem__aJUXJ\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"feedbackBtn\":\"FeedbackOptison_feedbackBtn__1Gb7e\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"titleForSections\":\"SectionTitle_titleForSections__11ZQU\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"Container_container__3TY9f\"};","import s from './Statistics.module.css';\r\nimport PropTypes from 'prop-types';\r\n\r\nfunction Statistics({ good, neutral, bad, total, positiveFeedbackPercentege }) {\r\n  return (\r\n    <ul className={s.statisticsFeedback}>\r\n      <li className={s.statisticsFeedbackItem}>Good: {good}</li>\r\n      <li className={s.statisticsFeedbackItem}>Neutural: {neutral}</li>\r\n      <li className={s.statisticsFeedbackItem}>Bad: {bad}</li>\r\n      <li className={s.statisticsFeedbackItem}>Total: {total}</li>\r\n      <li className={s.statisticsFeedbackItem}>\r\n        Positive feedback:{' '}\r\n        {total === 0\r\n          ? (positiveFeedbackPercentege = 0)\r\n          : positiveFeedbackPercentege}\r\n      </li>\r\n    </ul>\r\n  );\r\n}\r\nexport default Statistics;\r\n\r\nStatistics.propTypes = {\r\n  good: PropTypes.number.isRequired,\r\n  neutral: PropTypes.number.isRequired,\r\n  bad: PropTypes.number.isRequired,\r\n  total: PropTypes.number.isRequired,\r\n  positiveFeedbackPercentege: PropTypes.number.isRequired,\r\n};\r\n","import s from './FeedbackOptison.module.css';\r\nimport PropTypes from 'prop-types';\r\n\r\nfunction FeedbackOptions({ options, onLeaveFeedback }) {\r\n  return (\r\n    <>\r\n      {Object.keys(options).map((el, index) => (\r\n        <button\r\n          className={s.feedbackBtn}\r\n          key={index}\r\n          onClick={() => onLeaveFeedback(el)}\r\n        >\r\n          {el}\r\n        </button>\r\n      ))}\r\n    </>\r\n  );\r\n}\r\nexport default FeedbackOptions;\r\n\r\nFeedbackOptions.propTypes = {\r\n  options: PropTypes.object.isRequired,\r\n  onLeaveFeedback: PropTypes.func,\r\n};\r\n","import s from './SectionTitle.module.css';\r\nimport PropTypes from 'prop-types';\r\n\r\nfunction SectionTitle({ title, children }) {\r\n  return (\r\n    <>\r\n      <h2 className={s.titleForSections}>{title}</h2>\r\n      {children}\r\n    </>\r\n  );\r\n}\r\nexport default SectionTitle;\r\n\r\nSectionTitle.propTypes = {\r\n  title: PropTypes.string.isRequired,\r\n};\r\n","import PropTypes from 'prop-types';\r\n\r\nfunction NotificationMessage({ message }) {\r\n  return (\r\n    <>\r\n      <p>{message}</p>\r\n    </>\r\n  );\r\n}\r\nexport default NotificationMessage;\r\n\r\nNotificationMessage.propTypes = {\r\n  message: PropTypes.string.isRequired,\r\n};\r\n","import s from './Container.module.css';\r\n\r\nfunction Container({ children }) {\r\n  return <div className={s.container}>{children}</div>;\r\n}\r\n\r\nexport default Container;\r\n","import { useState } from 'react';\n\nimport Statistics from './components/Statistics/Statistics';\nimport FeedbackOptions from './components/FeedbackOptions/FeedbackOptions';\nimport SectionTitle from './components/SectionTitle/SectionTitle';\nimport NotificationMessage from './components/NotificationMessage/NotificationMessage';\nimport Container from './components/Container/Container';\n\nfunction App() {\n  const [good, setGoodFeedback] = useState(0);\n  const [neutral, setNeutralFeedback] = useState(0);\n  const [bad, setBadFeedback] = useState(0);\n\n  const addFeedback = type => {\n    switch (type) {\n      case 'good':\n        setGoodFeedback(prevState => prevState + 1);\n        break;\n      case 'neutral':\n        setNeutralFeedback(prevState => prevState + 1);\n        break;\n      case 'bad':\n        setBadFeedback(prevState => prevState + 1);\n        break;\n      default:\n        return;\n    }\n  };\n  const countTotalFeedback = () => {\n    return good + neutral + bad;\n  };\n\n  const totalFeedback = countTotalFeedback();\n\n  const countPositiveFeedbackPercentage = () => {\n    return Math.round((good / totalFeedback) * 100);\n  };\n  const positiveFeedback = countPositiveFeedbackPercentage();\n\n  return (\n    <Container>\n      <SectionTitle title=\"Please leave feedback\" />\n      <FeedbackOptions\n        options={{ good, neutral, bad }}\n        onLeaveFeedback={addFeedback}\n      />\n      <SectionTitle title=\"Statistics\" />\n      {countTotalFeedback === 0 ? (\n        <NotificationMessage message=\"No feedback given\" />\n      ) : (\n        <Statistics\n          total={totalFeedback}\n          good={good}\n          neutral={neutral}\n          bad={bad}\n          positiveFeedbackPercentege={positiveFeedback}\n        />\n      )}\n    </Container>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n"],"sourceRoot":""}